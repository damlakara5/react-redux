{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\react-auth\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainigTime = calculateRemainingTime(storedExpirationDate);\n  if (remainigTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n  return {\n    token: storedToken,\n    duration: remainigTime\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logOutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.setItem('expirationTime', expirationTime);\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainigTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logOutHandler, remainigTime);\n  };\n  useEffect(() => {}, []);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainigTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logOutHandler","setItem","clearTimeout","loginHandler","setTimeout","contextValue","children"],"sources":["C:/Users/engin/Desktop/react/react-course/react-auth/src/store/auth-context.js"],"sourcesContent":["import React, {useState, useEffect}  from 'react'\r\n\r\nlet logoutTimer\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n})\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n        const currentTime = new Date().getTime()\r\n        const adjExpirationTime = new Date(expirationTime).getTime()\r\n\r\n        const remainingDuration = adjExpirationTime - currentTime\r\n\r\n        return remainingDuration\r\n}\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token')\r\n    const storedExpirationDate = localStorage.getItem('expirationTime')\r\n\r\n    const remainigTime  = calculateRemainingTime(storedExpirationDate)\r\n\r\n    if(remainigTime <= 3600){\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('expirationTime')\r\n        return null\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration : remainigTime\r\n    }\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken()\r\n\r\n    let initialToken;\r\n    if(tokenData ) {\r\n\r\n        initialToken = tokenData.token\r\n    }\r\n    const [token, setToken] = useState(initialToken)\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logOutHandler = ( ) => {\r\n        setToken(null)\r\n        localStorage.removeItem('token')\r\n        localStorage.setItem('expirationTime' , expirationTime)\r\n\r\n        if(logoutTimer) {\r\n            clearTimeout(logoutTimer)\r\n        }\r\n    }\r\n\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token)\r\n        localStorage.setItem('token' , token)\r\n       const remainigTime =  calculateRemainingTime(expirationTime )\r\n\r\n       logoutTimer= setTimeout(logOutHandler, remainigTime)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    } , [])\r\n\r\n  \r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logOutHandler\r\n    }\r\n\r\n    return <AuthContext.Provider  value={contextValue}  >\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAEjD,IAAIC,WAAW;AAEf,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,CAAC;EACpCC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAGF,KAAK,IAAK,CAAC,CAAC;EACpBG,MAAM,EAAE,MAAM,CAAC;AACnB,CAAC,CAAC;AAEF,MAAMC,sBAAsB,GAAIC,cAAc,IAAK;EAC3C,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;EACxC,MAAMC,iBAAiB,GAAG,IAAIF,IAAI,CAACF,cAAc,CAAC,CAACG,OAAO,EAAE;EAE5D,MAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAAW;EAEzD,OAAOI,iBAAiB;AAChC,CAAC;AAED,MAAMC,mBAAmB,GAAG,MAAM;EAC9B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,MAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EAEnE,MAAME,YAAY,GAAIZ,sBAAsB,CAACW,oBAAoB,CAAC;EAElE,IAAGC,YAAY,IAAI,IAAI,EAAC;IACpBH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCJ,YAAY,CAACI,UAAU,CAAC,gBAAgB,CAAC;IACzC,OAAO,IAAI;EACf;EAEA,OAAO;IACHjB,KAAK,EAAEY,WAAW;IAClBM,QAAQ,EAAGF;EACf,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC1C,MAAMC,SAAS,GAAGV,mBAAmB,EAAE;EAEvC,IAAIW,YAAY;EAChB,IAAGD,SAAS,EAAG;IAEXC,YAAY,GAAGD,SAAS,CAACrB,KAAK;EAClC;EACA,MAAM,CAACA,KAAK,EAAEuB,QAAQ,CAAC,GAAG5B,QAAQ,CAAC2B,YAAY,CAAC;EAEhD,MAAME,cAAc,GAAG,CAAC,CAACxB,KAAK;EAE9B,MAAMyB,aAAa,GAAG,MAAO;IACzBF,QAAQ,CAAC,IAAI,CAAC;IACdV,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCJ,YAAY,CAACa,OAAO,CAAC,gBAAgB,EAAGrB,cAAc,CAAC;IAEvD,IAAGR,WAAW,EAAE;MACZ8B,YAAY,CAAC9B,WAAW,CAAC;IAC7B;EACJ,CAAC;EAGD,MAAM+B,YAAY,GAAG,CAAC5B,KAAK,EAAEK,cAAc,KAAK;IAC5CkB,QAAQ,CAACvB,KAAK,CAAC;IACfa,YAAY,CAACa,OAAO,CAAC,OAAO,EAAG1B,KAAK,CAAC;IACtC,MAAMgB,YAAY,GAAIZ,sBAAsB,CAACC,cAAc,CAAE;IAE7DR,WAAW,GAAEgC,UAAU,CAACJ,aAAa,EAAET,YAAY,CAAC;EACvD,CAAC;EAGDpB,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAG,EAAE,CAAC;EAGP,MAAMkC,YAAY,GAAG;IACjB9B,KAAK,EAAEA,KAAK;IACZC,UAAU,EAAEuB,cAAc;IAC1BtB,KAAK,EAAE0B,YAAY;IACnBzB,MAAM,EAAEsB;EACZ,CAAC;EAED,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAE,KAAK,EAAEK,YAAa;IAAA,UAC7CV,KAAK,CAACW;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAC3B,CAAC;AAAA,GA/CYZ,mBAAmB;AAAA,KAAnBA,mBAAmB;AAiDhC,eAAerB,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}