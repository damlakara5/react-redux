{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\http-request\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/film/');\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n  if (movies.length) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    });\n  }\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, error);\n  }\n  if (isLoading) {\n    /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, \"Loading...\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, content));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","err","message","content","length"],"sources":["C:/Users/engin/Desktop/react/react-course/http-request/src/App.js"],"sourcesContent":["import React, { useState , useEffect, useCallback} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetchMovieHandler()\n  }, [fetchMovieHandler])\n\n\n  const fetchMovieHandler = useCallback(async () =>  {\n    setIsLoading(true)\n    setError(null)\n    try{\n      const response = await fetch('https://swapi.dev/api/film/')\n\n      if(!response.ok) {\n        throw new Error(\"Something went wrong\") \n      }\n\n      const data = await response.json()\n\n        const transformedMovies = data.results.map ((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date\n\n          }\n        })\n        setMovies(transformedMovies)\n        \n    }\n    catch(err){\n        setError(err.message)\n    }\n    setIsLoading(false);\n  }, [])\n\n  let content = <p>Found no movies.</p>\n  if(movies.length){\n    content = <MoviesList movies={movies} />\n  }\n  if(error) {\n    content = <p>{error}</p>\n  }\n\n  if(isLoading) {\n    <p>Loading...</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button  onClick={fetchMovieHandler} >Fetch Movies</button>\n      </section>\n      <section>\n       {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAE/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAElB,SAASC,GAAG,GAAG;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdU,iBAAiB,EAAE;EACrB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAGvB,MAAMA,iBAAiB,GAAGT,WAAW,CAAC,YAAa;IACjDM,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAG;MACD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAE3D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAEhC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAGC,SAAS,IAAK;QACzD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QAEzB,CAAC;MACH,CAAC,CAAC;MACFtB,SAAS,CAACY,iBAAiB,CAAC;IAEhC,CAAC,CACD,OAAMW,GAAG,EAAC;MACNnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC;IACzB;IACAtB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIuB,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAuB;EACrC,IAAG1B,MAAM,CAAC2B,MAAM,EAAC;IACfD,OAAO,gBAAG,oBAAC,UAAU;MAAC,MAAM,EAAE1B,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAC1C;EACA,IAAGI,KAAK,EAAE;IACRsB,OAAO,gBAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAItB,KAAK,CAAK;EAC1B;EAEA,IAAGF,SAAS,EAAE;IACZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAAiB;EACnB;EAEA,oBACE,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAS,OAAO,EAAEI,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAuB,CACnD,eACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACEoB,OAAO,CACC,CACK;AAErB;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module"}