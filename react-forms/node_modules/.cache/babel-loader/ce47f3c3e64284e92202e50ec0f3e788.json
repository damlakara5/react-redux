{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  /*  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false) */\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [eneteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    /*       if(event.target.value.trim () !== ''){\n            setEnteredNameIsValid(true)\n          } */\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    /*       if(event.target.value.trim () !== ''){\n          setEnteredNameIsValid(true)\n        } */\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n\n    /*     if(enteredName.trim () === ''){\n          setEnteredNameIsValid(false)\n        } */\n  };\n\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    /*     if(enteredName.trim () == ''){\n          setEnteredNameIsValid(false)\n            return;\n        } */\n    if (!enteredNameIsValid) {\n      return;\n    }\n    /*   setEnteredNameIsValid(true) */\n\n    //resetting \n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must be not empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"uhAs58tCYKVM1kVzNNJIUmsT4io=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","eneteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","enteredEmail"],"sources":["C:/Users/engin/Desktop/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('')\n /*  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false) */\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\n  const [eneteredEmail, setEnteredEmail] = useState('')\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n  const enteredNameIsValid= enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n  const nameInputChangeHandler = (event) => {\n      setEnteredName(event.target.value)\n/*       if(event.target.value.trim () !== ''){\n        setEnteredNameIsValid(true)\n      } */\n  }\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value)\n/*       if(event.target.value.trim () !== ''){\n      setEnteredNameIsValid(true)\n    } */\n}\n\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true)\n\n/*     if(enteredName.trim () === ''){\n      setEnteredNameIsValid(false)\n    } */\n\n  }\n\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true)\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault()\n\n    setEnteredNameTouched(true)\n\n/*     if(enteredName.trim () == ''){\n      setEnteredNameIsValid(false)\n        return;\n    } */\n    if(!enteredNameIsValid ){\n      return\n    }\n  /*   setEnteredNameIsValid(true) */\n\n    //resetting \n    setEnteredName('')\n    setEnteredNameTouched(false)\n  }\n\n \n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control '\n\n  return (\n    <form onSubmit={formSubmissionHandler} >\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label> \n        <input  type='text' id='name'  onChange={nameInputChangeHandler} value={enteredName} onBlur={nameInputBlurHandler} />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must be not empty</p>}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your Email</label> \n        <input  type='email' id='email'  onChange={emailInputChangeHandler} value={enteredEmail} onBlur={emailInputBlurHandler} />\n        {nameInputIsInvalid && <p className=\"error-text\">Please enter a valid email.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}