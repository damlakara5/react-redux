{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Damla\",\n  text: \"Learning react is fun\"\n}, {\n  id: \"q2\",\n  author: \"Damla Kara\",\n  text: \"Learning react is great\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const match = useRouteMatch();\n  const params = useParams();\n  console.log(params);\n  console.log(params.quoteId);\n  const paramQuoteId = params.quoteId;\n  const quote = DUMMY_QUOTES.find(quote => quote.id == paramQuoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","console","log","quoteId","paramQuoteId","quote","find","path","url"],"sources":["C:/Users/engin/Desktop/react/react-course/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"sourcesContent":["import React from 'react'\r\nimport { useParams , Route, Link, useRouteMatch} from 'react-router-dom'\r\nimport Comments from \"../components/comments/Comments\"\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\"\r\nimport useHttp from '../hooks/use-http'\r\nimport { getSingleQuote } from '../lib/api'\r\n\r\nconst  DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\", author: \"Damla\" , text:\"Learning react is fun\"\r\n  },\r\n  {\r\n    id: \"q2\", author: \"Damla Kara\" , text:\"Learning react is great\"\r\n  }\r\n]\r\n\r\nconst QuoteDetail = () => {\r\n   const match = useRouteMatch()\r\n   const params = useParams()\r\n   console.log(params)\r\n   console.log(params.quoteId)\r\n   const paramQuoteId = params.quoteId\r\n\r\n   const quote = DUMMY_QUOTES.find(quote => quote.id == paramQuoteId)\r\n\r\n   if(!quote){\r\n      return <p>No quote find</p>\r\n   }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <HighlightedQuote  text={quote.text}   author={quote.author}/>\r\n        <Route exact path={`${match.path}`}>\r\n            <div className='centered'>\r\n              <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                  Load Comments\r\n              </Link>\r\n            </div>\r\n        </Route>\r\n    \r\n        <Route exact path={`${match.path}/comments`}>\r\n            <Comments />\r\n        </Route>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAGC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAO,kBAAkB;AACxE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAAA;AAE3C,MAAOC,YAAY,GAAG,CACpB;EACEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAGC,IAAI,EAAC;AACnC,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,YAAY;EAAGC,IAAI,EAAC;AACxC,CAAC,CACF;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACvB,MAAMC,KAAK,GAAGV,aAAa,EAAE;EAC7B,MAAMW,MAAM,GAAGd,SAAS,EAAE;EAC1Be,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;EAC3B,MAAMC,YAAY,GAAGJ,MAAM,CAACG,OAAO;EAEnC,MAAME,KAAK,GAAGX,YAAY,CAACY,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACV,EAAE,IAAIS,YAAY,CAAC;EAElE,IAAG,CAACC,KAAK,EAAC;IACP,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB;EAC9B;EAGD,oBACE;IAAA,wBACI,QAAC,gBAAgB;MAAE,IAAI,EAAEA,KAAK,CAACR,IAAK;MAAG,MAAM,EAAEQ,KAAK,CAACT;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9D,QAAC,KAAK;MAAC,KAAK;MAAC,IAAI,EAAG,GAAEG,KAAK,CAACQ,IAAK,EAAE;MAAA,uBAC/B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAER,KAAK,CAACS,GAAI,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAEjD;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACF,eAER,QAAC,KAAK;MAAC,KAAK;MAAC,IAAI,EAAG,GAAET,KAAK,CAACQ,IAAK,WAAW;MAAA,uBACxC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAA,GA9BKT,WAAW;EAAA,QACAT,aAAa,EACZH,SAAS;AAAA;AAAA,KAFrBY,WAAW;AAgCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}