{"ast":null,"code":"/* import { createStore } from 'redux'; */\n\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n/* \r\nold redux   \r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'increase') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if (action.type === 'decrement') {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if(action.type === 'toggle'){\r\n    return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n */\n/* const store = createStore(counterReducer); */\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["C:/Users/engin/Desktop/react/react-course/redux-basics/src/store/index.js"],"sourcesContent":["/* import { createStore } from 'redux'; */\r\n\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialAuthState = {isAuthenticated: false}\r\n\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: initialAuthState,\r\n    reducers : {\r\n        login(state) \r\n        {\r\n            state.isAuthenticated= true\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated= false\r\n        }\r\n    }\r\n})\r\n\r\n/* \r\nold redux   \r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n  if (action.type === 'increase') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if (action.type === 'decrement') {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if(action.type === 'toggle'){\r\n    return {\r\n        counter: state.counter,\r\n        showCounter: !state.showCounter\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n */\r\n/* const store = createStore(counterReducer); */\r\nconst store = configureStore({\r\n    reducer: {\r\n        counter : counterSlice.reducer,\r\n        auth: authSlice.reducer\r\n    }\r\n})\r\n\r\nexport const counterActions = counterSlice.actions\r\nexport const authActions = authSlice.actions\r\n\r\nexport default store;"],"mappings":"AAAA;;AAEA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAG5D,MAAMC,gBAAgB,GAAG;EAACC,eAAe,EAAE;AAAK,CAAC;AAGjD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAG;IACPC,KAAK,CAACC,KAAK,EACX;MACIA,KAAK,CAACN,eAAe,GAAE,IAAI;IAC/B,CAAC;IACDO,MAAM,CAACD,KAAK,EAAE;MACVA,KAAK,CAACN,eAAe,GAAE,KAAK;IAChC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAE;IACLC,OAAO,EAAGC,YAAY,CAACF,OAAO;IAC9BG,IAAI,EAAEX,SAAS,CAACQ;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAAO;AAE5C,eAAeN,KAAK"},"metadata":{},"sourceType":"module"}