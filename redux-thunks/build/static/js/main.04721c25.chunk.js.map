{"version":3,"sources":["components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/card-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notifications.js","App.js","store/card-actions.js","index.js","components/Cart/CartItem.module.css"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","cardSlice","items","totalQuantity","replaceCard","addItemToCard","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCard","filter","cardActions","store","configureStore","reducer","ui","card","Card","props","className","classes","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cardItems","useSelector","cart","map","CartButton","cardQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCard","useEffect","fetchData","fetch","response","ok","Error","json","data","cardData","sendRequest","method","body","JSON","stringify","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.04721c25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__UaeNY\",\"price\":\"ProductItem_price__1dXIj\",\"actions\":\"ProductItem_actions__dxrPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__n6TjI\",\"error\":\"Notification_error__3tyLO\",\"success\":\"Notification_success___ntJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1nbcz\",\"badge\":\"CartButton_badge__26SAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2epNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3szGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__9BCpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1SlQp\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {cartIsVisible: false, notification: null},\r\n    reducers: {\r\n        toggle(state){\r\n            state.cartIsVisible = !state.cartIsVisible\r\n        },\r\n        showNotification (state, action) {\r\n            state.notification= {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const uiActions = uiSlice.actions\r\n\r\nexport default uiSlice\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cardSlice = createSlice({\r\n    name: 'card',\r\n    initialState:{\r\n        items : [],\r\n        totalQuantity: 0\r\n    },\r\n    reducers: {\r\n        replaceCard(state, action){\r\n            state.totalQuantity = action.payload.totalQuantity\r\n            state.items = action.payload.items\r\n\r\n        },\r\n        addItemToCard (state , action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id: newItem.id, \r\n                    price: newItem.price , \r\n                    quantity: 1, \r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            }else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n\r\n            }\r\n        },\r\n        removeItemFromCard (state, action) {\r\n            const id = action.payload\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--\r\n            if(existingItem.quantity ===1){\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }else{\r\n                existingItem.quantity--\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n  \r\nexport const cardActions = cardSlice.actions\r\n\r\nexport default cardSlice;","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport uiSlice from './ui-slice'\r\nimport cardSlice from \"./card-slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        ui: uiSlice.reducer,\r\n        card: cardSlice.reducer\r\n    } \r\n})\r\n\r\nexport default store","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from 'react-redux';\nimport classes from './CartItem.module.css';\nimport { cardActions } from '../../store/card-slice';\nconst CartItem = (props) => {\n  const dispatch = useDispatch()\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeItemHandler = () => {\n    dispatch(cardActions.removeItemFromCard(id))\n  }\n\n  const addItemHandler = ( ) => {\n    dispatch(cardActions.addItemToCard({\n      id,\n      title,\n      price\n    }))\n  }\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}  >-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const cardItems = useSelector(item => item.card.items)\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {\n          cardItems.map(item => (\n            <CartItem\n            item={{ title: item.name, quantity: item.quantity, total: item.totalPrice, price: item.price, id: item.id }}\n          />\n          ))\n        }\n        \n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from './CartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nconst CartButton = (props) => {\n  const dispatch = useDispatch()\n  const cardQuantity = useSelector(state => state.card.totalQuantity)\n  const toggleCardHandle = ( ) => {\n      dispatch(uiActions.toggle())\n  }\n  return (\n    <button className={classes.button}  onClick={toggleCardHandle}  >\n      <span>My Cart</span>\n      <span className={classes.badge}>{cardQuantity}  </span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { cardActions } from '../../store/card-slice';\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch()\n  const { title, price, description, id } = props;\n\n  const handleAddItem = () => {\n      dispatch(cardActions.addItemToCard({\n        id,\n        title,\n        price,\n        description\n      }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={handleAddItem}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n  {id:'p1', price: 6, title: 'My First Book', description: 'The first book that I ever wrote'},\n  {id:'p2', price: 5, title: 'My Second Book', description: 'The second book that I ever wrote'},\n  {id:'p3', price: 7, title: 'My Third Book', description: 'The third book that I ever wrote'},\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {\n          DUMMY_PRODUCTS.map(product =>(\n            <ProductItem\n              key = {product.id}\n              id= {product.id}\n              title={product.title}\n              price={product.price}\n              description={product.description}\n            />\n          ))\n        }\n        \n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notifications';\nimport {sendCardData, fetchCardData} from './store/card-actions';\n\nlet isInitial=true;\n\nfunction App() {\n  const dispatch = useDispatch()\n  const showCard = useSelector(state => state.ui.cartIsVisible)\n  const card= useSelector(state => state.card)\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n    dispatch(fetchCardData())\n  } ,[dispatch])\n\n  useEffect(() => {\n\n    /* \n      async functions with useEffect\n      const sendCardData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending card data!'\n      }))\n      const response = await fetch('https://redux-async-800ac-default-rtdb.firebaseio.com/card.json', {\n        method: 'PUT',\n        body: JSON.stringify(card)\n      })\n\n      if(!response){\n        throw new Error('Sending cart data failed')\n      } \n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent card data successfully!'\n      }))\n    \n\n      const responseData = await response.json()\n\n    }\n\n    if(isInitial){\n      isInitial=false\n      return\n    }\n\n    sendCardData().catch(e => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending card data failed !'\n      }))\n    }) \n      */\n     if(isInitial){\n      isInitial = false\n      return\n     }\n\n\n\n     dispatch(sendCardData(card))\n\n\n  } ,[card, dispatch] ) \n\n\n  return (\n    <>\n    {notification && <Notification  status={notification.status} title={notification.title} message={notification.message} />}\n      <Layout>\n        {showCard && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\r\nimport { cardActions } from \"./card-slice\";\r\n\r\nexport const fetchCardData = ( ) => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://redux-thunks-b2ee9-default-rtdb.firebaseio.com/card.json' )\r\n\r\n            if(!response.ok){\r\n                throw new Error(\"Couldn't fetch data\")\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            return data\r\n        }\r\n\r\n        try{\r\n           const cardData = await fetchData()\r\n           dispatch(cardActions.replaceCard({\r\n                items: cardData.items  || [],\r\n                totalQuantity: cardData.totalQuantity\r\n           }))\r\n\r\n        }catch(error){\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error!',\r\n                  message: 'Fetching cart data failed!',\r\n                })\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCardData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'pending',\r\n          title: 'Sending...',\r\n          message: 'Sending cart data!',\r\n        })\r\n      );\r\n  \r\n      const sendRequest = async () => {\r\n        const response = await fetch(\r\n          'https://redux-thunks-b2ee9-default-rtdb.firebaseio.com/card.json',\r\n          {\r\n            method: 'PUT',\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Sending cart data failed.');\r\n        }\r\n      };\r\n  \r\n      try {\r\n        await sendRequest();\r\n  \r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'success',\r\n            title: 'Success!',\r\n            message: 'Sent cart data successfully!',\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Sending cart data failed!',\r\n          })\r\n        );\r\n      }\r\n    };\r\n  };","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Provider store={store} ><App /></Provider>);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2ktEs\",\"details\":\"CartItem_details__3ZXah\",\"quantity\":\"CartItem_quantity__rxT4U\",\"price\":\"CartItem_price__jEfuX\",\"itemprice\":\"CartItem_itemprice__16F56\",\"actions\":\"CartItem_actions__24fXJ\"};"],"sourceRoot":""}